(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{521:function(a,t,e){"use strict";e.r(t);var s=e(4),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"vue-开发实用小技巧-持续更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-开发实用小技巧-持续更新"}},[a._v("#")]),a._v(" Vue 开发实用小技巧 -- 持续更新")]),a._v(" "),e("h3",{attrs:{id:"vuex-中页面刷新，state-数据丢失的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex-中页面刷新，state-数据丢失的问题"}},[a._v("#")]),a._v(" Vuex 中页面刷新，state 数据丢失的问题")]),a._v(" "),e("blockquote",[e("p",[a._v("这个本身 vuex 机制就是这样，我们不能不让用户刷新页面，但是可以使用一些小插件可以做到不让页面刷新,可以使用特定的插件来实现页面刷新数据不丢失，原理就是先将数据存储在本地的"),e("code",[a._v("localStroage")]),a._v("或者"),e("code",[a._v("sessionStroage")]),a._v("中")])]),a._v(" "),e("h4",{attrs:{id:"vue-savedata-指定数据持久化（配置简，性能佳，体积小"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-savedata-指定数据持久化（配置简，性能佳，体积小"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://www.npmjs.com/package/vue-savedata",target:"_blank",rel:"noopener noreferrer"}},[a._v("Vue-savedata"),e("OutboundLink")],1),a._v(" -- 指定数据持久化（配置简，性能佳，体积小)")]),a._v(" "),e("blockquote",[e("p",[a._v("vuex 指定【模块】的 state 持久化（配置简，性能佳，体积小: gzip 压缩之后 1238 字节 ≈ 1.2kb） ## updata 2.x")])]),a._v(" "),e("p",[a._v("安装")]),a._v(" "),e("p",[e("code",[a._v("npm install vue-savedata")])]),a._v(" "),e("p",[a._v("使用案例")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("  import createPersiste from 'vue-savedata'\n  // 默认全部持久化，你也可以通过一丢丢配置项,指定数据持久化\n  const store = new Vuex.Store({\n    // ...\n    plugins: [createPersiste()],\n  })\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("h3",{attrs:{id:"vue-中的懒加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-中的懒加载"}},[a._v("#")]),a._v(" Vue 中的懒加载")]),a._v(" "),e("blockquote",[e("p",[a._v("毕设开发的过程中可能涉及到的数据量比较小，所以不怎么会出现需要懒加载的情况，但是这个在工作中就是非常非常重要的一个知识点了。懒加载的功能和分页其实是非常像的，就是一次性不会给太多的数据。")])]),a._v(" "),e("p",[a._v("懒加载的作用：")]),a._v(" "),e("ul",[e("li",[a._v("界面的加载速度会有非常明显的提升")]),a._v(" "),e("li",[a._v("节省带宽")]),a._v(" "),e("li",[a._v("不必要加载无用（用户刷不到的数据） 减轻了服务器的压力")])]),a._v(" "),e("h4",{attrs:{id:"vue-lazylaod"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-lazylaod"}},[a._v("#")]),a._v(" "),e("a",{attrs:{href:"https://www.npmjs.com/package/vue-lazyload",target:"_blank",rel:"noopener noreferrer"}},[a._v("vue-lazylaod"),e("OutboundLink")],1)]),a._v(" "),e("ul",[e("li",[e("p",[a._v("引入 CDN 形式")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200713200853648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjI0MDE2Mg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})])]),a._v(" "),e("li",[e("p",[a._v("脚手架开发模式")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200713200905272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjI0MDE2Mg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),a._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200713201019252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjI0MDE2Mg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})])])]),a._v(" "),e("p",[a._v("其中的参数：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("error")]),a._v("表示的是当图片加载失败时会使用的图片地址")]),a._v(" "),e("li",[e("code",[a._v("loading")]),a._v("表示的是图片处在加载状态时会显示的图片")]),a._v(" "),e("li",[e("code",[a._v("attempt")]),a._v("表示图片会加载的次数（当加载失败以后会继续加载的次数）")])]),a._v(" "),e("p",[a._v("当配置好了这个之后，就可以在页面中使用了，原来图片的连接时写在"),e("code",[a._v("src")]),a._v("下，现在写在"),e("code",[a._v("v-lazy")]),a._v("里面即可")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200713201345697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjI0MDE2Mg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),a._v(" "),e("p",[a._v("以上便是图片的懒加载，只有当页面使用到图片了之后，才会去加载所以的内容(即使后端一次性将全部的资源一次返回（七八百条也一样）之后再图片懒加载的时候才会去加载，并不会一次性的将七八百条都渲染)")])])}),[],!1,null,null,null);t.default=r.exports}}]);