(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{501:function(s,n,e){"use strict";e.r(n);var a=e(4),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"reacthooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reacthooks"}},[s._v("#")]),s._v(" ReactHooks")]),s._v(" "),e("p",[s._v("react 创建组件的方式有两种，分别时"),e("strong",[s._v("纯函数组件")]),s._v("和"),e("strong",[s._v("类组件")]),s._v("，实际上函数组件和类组件的差别还是非常大的，开发中类组件给人的感觉是很长的一大串代码，实际上"),e("strong",[s._v("组件的最佳写法应该是函数，并不是类")]),s._v("。"),e("br"),s._v("\n函数组件的缺陷在于：")]),s._v(" "),e("ol",[e("li",[s._v("纯函数组件时无状态的组件")]),s._v(" "),e("li",[s._v("纯函数组件没有生命周期")]),s._v(" "),e("li",[s._v("纯函数组件没有 this")]),s._v(" "),e("li",[s._v("纯函数组件组件本质上也是只能时一个纯函数")])]),s._v(" "),e("p",[s._v("最终目标：\n希望我们写起组件来，能够像"),e("strong",[s._v("写纯函数一样轻，同时还具有类函数的一系列功能")])]),s._v(" "),e("h3",{attrs:{id:"hooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[s._v("#")]),s._v(" Hooks")]),s._v(" "),e("blockquote",[e("p",[s._v("hooks 的意思是钩子，本质上是为了实现写纯函数组件，需要一些状态等其他信息，就用钩子，将外部信息钩进来。")])]),s._v(" "),e("p",[s._v("react 默认提供了四种常用的钩子")]),s._v(" "),e("ul",[e("li",[s._v("useState()")]),s._v(" "),e("li",[s._v("useContext()")]),s._v(" "),e("li",[s._v("useReducer()")]),s._v(" "),e("li",[s._v("useEffect()")])]),s._v(" "),e("p",[s._v("不同的钩子函数可以钩入不同的外部功能，并且着些都含有"),e("code",[s._v("use")]),s._v("前缀，所以 React 规定，钩子一律是使用"),e("code",[s._v("use")]),s._v("为前缀，我们自己自定义的钩子也是要遵守这个规定使用"),e("code",[s._v("use")]),s._v("为前缀。")]),s._v(" "),e("h3",{attrs:{id:"usestate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usestate"}},[s._v("#")]),s._v(" useState")]),s._v(" "),e("blockquote",[e("p",[s._v("状态钩子 在函数组件中引用这个就拥有了状态")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  import { useState } from 'react'\n  const [state, setState] = useState(0)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("可以通过结构赋值的方式，解构出一个 state 值，和一个 setState()改变状态的方法")]),s._v(" "),e("p",[s._v("计数器案例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  function UseState() {\n    const [state, setState] = useState(0)\n    // 使用 useState 可以为我们创建出一个状态，  可以分别结构出 类似于 类组件的  state 和 setState\n\n    const change = () => {\n      setState(state + 1)\n    }\n    return (\n      <div>\n        <h3>hello world react_hooks</h3>\n        <p>count:{state}</p>\n        <button onClick={change}>change</button>\n      </div>\n    )\n  }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("注意点：")]),s._v(" "),e("ul",[e("li",[s._v("结构出来的名字并不是固定只能是 state，是可以自定义的，如: "),e("code",[s._v("const [name,setName] = useState('Jimmy')")])])]),s._v(" "),e("h3",{attrs:{id:"usecontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usecontext"}},[s._v("#")]),s._v(" useContext()")]),s._v(" "),e("blockquote",[e("p",[s._v("共享状态钩子")])]),s._v(" "),e("p",[s._v("使用步骤")]),s._v(" "),e("ul",[e("li",[s._v("父组件共享数据"),e("br"),s._v("\n父组件使用"),e("code",[s._v("React.createContext()")]),s._v("创建一个组件容器，可以通过 value 属性来开放可被子组件共享的数据。")]),s._v(" "),e("li",[s._v("子组件使用 useContext()共享状态钩子，可以钩出父组件共享出来的数据")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  import React, { useContext } from 'react'\n\n  function UserContext() {\n    const Conatiner = React.createContext()\n    // 使用 React.createContext() 创建出一个父容器  这个父容器可以通过 value属性 传递共享的数据  子组件可以使用 useContext() 钩子，钩出数据\n\n    const Achild = () => {\n      // 通过  useContext()  钩子  可以获取到其他组件共享出来的状态   实现不同组件之间的共享\n      const { name } = useContext(Conatiner)\n      return (\n        <div>\n          <p>我是Achild函数组件,作者是{name}</p>\n        </div>\n      )\n    }\n\n    const Bchild = () => {\n      const { name } = useContext(Conatiner)\n      return (\n        <div>\n          <p>我是Bchild函数组件,作者是{name}</p>\n        </div>\n      )\n    }\n\n    return (\n      // 此处和react-redux 使用很类似  都是使用一个父容器   暴露出一个对象  子组件就可以使用钩子 构出共享的那个状态\n      <Conatiner.Provider value={{ name: 'Jimmy' }}>\n        <h3>共享状态组件UserContext</h3>\n        <Achild></Achild>\n        <Bchild></Bchild>\n      </Conatiner.Provider>\n    )\n  }\n\n  export default UserContext\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("p",[s._v("注意点：")]),s._v(" "),e("ul",[e("li",[s._v("一定要是在共享组件的子组件才可以使用"),e("code",[s._v("useContext()")]),s._v("钩出共享数据")]),s._v(" "),e("li",[s._v("通过"),e("code",[s._v("React.createContext()")]),s._v("创建一个组件容器,使用方式和 react-redux 使用很类似 都是使用一个父容器 暴露出一个对象 子组件就可以使用钩子 构出共享的那个状态")])]),s._v(" "),e("h3",{attrs:{id:"usereducer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usereducer"}},[s._v("#")]),s._v(" useReducer")]),s._v(" "),e("blockquote",[e("p",[s._v("状态管理钩子函数")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  import { useReducer } from 'react'\n  const [state, dispatch] = useReducer(reducer,{count:0}) // 传递的两个参数分别是reducer函数和要管理的状态\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("可以通过结构赋值的方式，解构出一个 state 值，和一个 dispatch()触发不同的 action 执行的函数")]),s._v(" "),e("p",[s._v("计数器案例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  function UseReducer() {\n    const reducer = (state, action) => {\n      const ActionFn = {\n        add: () => {\n          return { ...state, count: state.count + 1 }\n        },\n      }\n\n      return ActionFn[action.type]()\n    }\n\n    const [state, dispatch] = useReducer(reducer, { count: 0 })\n\n    const AddOne = () => {\n      dispatch({\n        type: 'add',\n      })\n    }\n\n    return (\n      <div>\n        <h3>UseReducer</h3>\n        <p>now Count {state.count}</p>\n        <button onClick={AddOne}>+1</button>\n      </div>\n    )\n  }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("h3",{attrs:{id:"useeffect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#useeffect"}},[s._v("#")]),s._v(" useEffect")]),s._v(" "),e("blockquote",[e("p",[s._v("useEffect()钩子起的主要是生命周期的作用，可以传递两个参数，分别是回调函数和数组")])]),s._v(" "),e("p",[s._v("不同的参数，起的不同的效果")]),s._v(" "),e("ul",[e("li",[s._v("当只有一个回调函数的时候 这时候 useEffect(()=>{})起的主要是一个 componendtDidmount()函数的作用 也就是当组件加载完毕之后会执行回调函数的代码")]),s._v(" "),e("li",[s._v("当组件传递了第二个参数并且是一个数组的时候，这时候起的主要是一个 watcher 监听器的作用，只有这个数组变化了之后才会触发回调函数里面的内容")]),s._v(" "),e("li",[s._v("useEffect()可以返回一个函数，这个函数里面的代码只有在组件注销卸载的时候才会被使用")])]),s._v(" "),e("p",[s._v("案例:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  function AsyncPage({ user }) {\n    const [loading, setloading] = useState(true)  // 结构出来的名字是可以自定义的\n    const [person, setperson] = useState({})\n\n    useEffect(() => {\n      setloading(true)\n      setTimeout(() => {\n        setloading(false)\n        setperson({ user })\n      }, 3000)\n    }, [user])  // 传入的第二个参数数组，  只有当数组发生变化了之后，才会触发这个钩子\n\n    return (\n      <div>\n        <h4>异步页面</h4>\n        {loading ? <div>Loading...</div> : <div>所在的班级是{person.user}</div>}\n      </div>\n    )\n  }\n\n  function UseEffect() {\n    const [name, setname] = useState('Jimmy')\n    const [user, setUser] = useState('17信管')\n    const [show, setShow] = useState(true)\n\n    useEffect(() => {\n      setTimeout(() => {\n        setname('Jack')\n      }, 3000)\n\n      // useEffect() 钩子的返回值是一个函数的时候 当组件被注销的时候会被触发\n      return () => {\n        console.log('组件已经成功卸载 -- 通过useEffect() 钩子函数所监测到的结果')\n      }\n    })\n\n    const changeName = name => {\n      setUser(name)\n    }\n\n    const closeComponent = () => {\n      setShow(false)\n    }\n\n    return (\n      <div>\n        <h3>UseEffect钩子函数</h3>\n        <p>作者是：{name}</p>\n        {show ? <AsyncPage user={user}></AsyncPage> : <div>异步组件已经卸载</div>}\n        <button\n          onClick={() => {\n            changeName('17软开')\n          }}\n        >\n          改成17软开\n        </button>\n        <button\n          onClick={() => {\n            changeName('17数媒')\n          }}\n        >\n          改成17数媒\n        </button>\n        <button onClick={closeComponent}>卸载组件</button>\n        {/* <p>所在的班级是{user}</p> */}\n      </div>\n    )\n  }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("h3",{attrs:{id:"自定义钩子函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义钩子函数"}},[s._v("#")]),s._v(" 自定义钩子函数")]),s._v(" "),e("blockquote",[e("p",[s._v("当页面上比较多的地方需要使用到相同数据的时候，我们就可以做一层封装，返回出需要的数据")])]),s._v(" "),e("p",[s._v("案例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  function userUse(user) {\n    const [loading, setloading] = useState(true)\n    const [person, setperson] = useState({})\n\n    useEffect(() => {\n      setloading(true)\n      setTimeout(() => {\n        setloading(false)\n        setperson({ user })\n      }, 3000)\n    }, [user])\n\n    return [loading, person]\n  }\n\n  function AsyncPage({ user }) {\n    const [loading, person] = userUse(user)\n\n    return (\n      <div>\n        <h4>异步页面</h4>\n        {loading ? <div>Loading...</div> : <div>所在的班级是{person.user}</div>}\n      </div>\n    )\n  }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);